{"version":3,"file":"static/js/771.89fdc1c3.chunk.js","mappings":"6UAkBMA,GAAeC,EAAAA,EAAAA,KAERC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAiCjC,OACE,SAACC,EAAA,EAAD,CAAeC,MAAOX,EAAtB,UACE,UAACY,EAAA,EAAD,CACEC,UAAU,OACVC,SAAS,KACTC,GAAI,CACFC,QAAS,EACTC,OAAQ,iBACRC,aAAc,MACdC,UAAW,iCACXC,UAAW,QACXC,SAAU,QATd,WAYE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACER,GAAI,CACFS,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQb,GAAI,CAAEc,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KAAnC,SAAwC,iBAGxC,UAACV,EAAA,EAAD,CAAKV,UAAU,OAAOqB,SA5DT,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OACbC,EAAOJ,EAAMG,OAAOE,SAASD,KAAKE,MAClCC,EAASP,EAAMG,OAAOE,SAASE,OAAOD,MACtCE,EAAa,CACjBJ,KAAMA,EACNG,OAAQA,GAEJE,EAAkBvC,EAASwC,MAC/B,SAACC,GAAD,OAAaA,EAAQP,KAAKQ,gBAAkBR,EAAKQ,aAAjD,IAEIC,EAAiB3C,EAASwC,MAC9B,SAACC,GAAD,OAAaA,EAAQJ,SAAWA,CAAhC,IAEW,KAATH,GAA0B,KAAXG,EACjBO,IAAAA,OAAAA,QAAA,6BACiB,KAATV,EACRU,IAAAA,OAAAA,QAAA,gDACmB,KAAXP,EACRO,IAAAA,OAAAA,QAAA,gDACSL,GAAmBI,EAC5BC,IAAAA,OAAAA,QAAA,UAA2BV,EAA3B,mCAEAU,IAAAA,OAAAA,QAAA,UAA2BV,EAA3B,iCACApC,GAAS+C,EAAAA,EAAAA,IAAWP,IACpBN,EAAKc,QAER,EA+BqDC,YAAU,EAACrC,GAAI,CAAEsC,GAAI,GAAnE,WACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,aACNnB,KAAK,OACLoB,KAAK,OACLC,YAAY,aACZC,WAAS,EACTC,QAAQ,2HACRC,MAAM,4IAER,SAACT,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,eACNnB,KAAK,SACLoB,KAAK,SACLC,YAAY,qBAEd,SAACI,EAAA,EAAD,CACEC,SAAS,SAACC,EAAA,EAAD,IACTC,QAAS3D,EACT4D,gBAAgB,MAChBnC,QAAQ,YACR0B,KAAK,SACLF,WAAS,EACT1C,GAAI,CAAEsC,GAAI,EAAGgB,GAAI,GAPnB,UASE,0BAAM,oBAQnB,E,UClHYC,EAAS,WACpB,IAAMnE,GAAWC,EAAAA,EAAAA,MACXmE,GAASjE,EAAAA,EAAAA,IAAYkE,EAAAA,IAOzB,OACI,iCACE,SAACxC,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KACjClB,GAAI,CACAS,UAAW,EACXiD,UAAW,UAHjB,SAKC,mBAGD,SAAClD,EAAA,EAAD,CAAKV,UAAU,OAAOuC,YAAU,EAACrC,GAAI,CAAEsC,GAAI,GAA3C,UACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,aACNnB,KAAK,SACLoB,KAAK,OACLC,YAAY,gBACZc,aAAa,OACbjC,MAAO8B,EAAO9B,MACdqB,QAAQ,2HACRC,MAAM,yIACNY,SA5Be,SAACxC,GAC1B,IAAMyC,EAAczC,EAAMG,OAAOG,MACjCtC,GAAS0E,EAAAA,EAAAA,GAAUD,GACpB,QA8BF,EC9CD,GAAgB,UAAY,kC,UCIfE,EAAgB,WACzB,OACI,iBAAKC,UAAWC,EAAAA,UAAhB,WACM,SAACC,EAAA,EAAD,CACAlE,GAAI,CAACmE,MAAO,cAEZ,cAAGH,UAAWC,EAAAA,UAAd,SAA6B,oCAK1C,E,6GCKYG,EAAU,SAAC,GAAkB,IAAhB9E,EAAe,EAAfA,SAEhBF,GAAWC,EAAAA,EAAAA,MAEjB,SAASgF,EAAT,GAAmE,IAAX9C,EAAU,EAAzB+C,cACrCC,IAAK,CACHvB,MAAO,gBACPwB,KAAM,8DACNC,KAAM,UACNC,SAAS,EACTC,YAAY,IACXC,MAAK,SAAAC,GACJ,GAAIA,EAAY,CACdtD,EAAOuD,aAAa,WAAY,QAChC,IAAMC,EAAKxD,EAAOyD,aAAa,WAC/B5F,GAAS6F,EAAAA,EAAAA,IAAcF,IACvBR,IAAK,4BAA6B,CAChCE,KAAM,WAET,CACF,GACJ,CAEH,OACI,SAACS,EAAA,EAAD,CACIpF,UAAWqF,EAAAA,EACXC,MAAO,CACHC,MAAO,OACPtF,SAAU,QACVyC,OAAQ,UALhB,SAQyB,IAApBlD,EAASgG,QACN,UAACC,EAAA,EAAD,CAAOvF,GAAI,CAAEwF,SAAU,KAAM,aAAW,eAAxC,WACI,SAACC,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAW3F,GAAI,CAAE4F,WAAY,QAA7B,SAAuC,UACvC,SAACD,EAAA,EAAD,CAAW3F,GAAI,CAAE4F,WAAY,QAA7B,SAAuC,YACvC,SAACD,EAAA,EAAD,CAAW3F,GAAI,CAAE4F,WAAY,QAA7B,SAAuC,iBAG/C,SAACC,EAAA,EAAD,UACKvG,EAASwG,KAAI,gBAAGnE,EAAH,EAAGA,OAAQH,EAAX,EAAWA,KAAMuD,EAAjB,EAAiBA,GAAjB,OACV,UAACW,EAAA,EAAD,CAEI1F,GAAI,CAAE,mCAAoC,CAAEE,OAAQ,IACpD8D,UAAU,eAHd,WAKI,SAAC2B,EAAA,EAAD,CAAW7F,UAAU,KAAKiG,MAAM,MAAhC,SACKvE,KAEL,SAACmE,EAAA,EAAD,CAAWK,MAAM,OAAjB,SAAyBrE,KACzB,SAACgE,EAAA,EAAD,CAAWK,MAAM,SAAjB,UACI,SAACC,EAAA,EAAD,CACI,UAASlB,EACT,aAAW,SACXmB,QAAS7B,EAHb,UAKI,SAAC8B,EAAA,EAAD,UAdHpB,EAFC,UAwBtB,SAAChB,EAAD,KAIf,EChFYqC,EAAc,WACvB,IAAM9G,GAAWC,EAAAA,EAAAA,IAAY8G,EAAAA,IAE7B,OACI,UAACxG,EAAA,EAAD,CACEC,UAAU,OACVC,SAAS,KACTC,GAAI,CACFC,QAAS,EACTC,OAAQ,iBACRC,aAAc,MACdC,UAAW,iCACXC,UAAW,QACXC,SAAU,QATd,WAYE,SAACiD,EAAD,KACI,SAACa,EAAD,CAAS9E,SAAUA,MAGhC,EClBc,SAASgH,IAEtB,IAAMlH,GAAWC,EAAAA,EAAAA,MACXkH,GAAYhH,EAAAA,EAAAA,IAAYiH,EAAAA,IACxBC,GAAQlH,EAAAA,EAAAA,IAAYmH,EAAAA,IAO1B,OAJAC,EAAAA,EAAAA,YAAU,WACRvH,GAASwH,EAAAA,EAAAA,MACV,GAAE,CAACxH,KAGF,UAACS,EAAA,EAAD,CACEG,GAAI,CACFU,QAAS,OACTC,cAAe,CACbkG,GAAI,SACJC,GAAI,OAENC,eAAgB,SAChBC,IAAK,EACLC,cAAe,QATnB,WAYE,SAAC9H,EAAD,KACA,SAACiH,EAAD,CACEG,UAAWA,EACXE,MAAOA,MAId,C","sources":["components/ContactsForm/ContactsForm.jsx","components/Filter/Filter.jsx","webpack://Phonebook/./src/components/NoContactsYet/NoContactsYet.module.css?007f","components/NoContactsYet/NoContactsYet.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations'\nimport Notiflix from \"notiflix\";\n\n\n\nimport { selectIsAddLoading, selectContacts } from \"../../redux/contacts/selectors\";\n\nimport Avatar from '@mui/material/Avatar';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nconst defaultTheme = createTheme();\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch() \n  const contacts = useSelector(selectContacts)\n  const isAddLoading = useSelector(selectIsAddLoading);\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.target\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const newContact = {\n      name: name,\n      number: number,\n    }\n    const isPresentOnList = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isNumberOnList = contacts.find(\n      (contact) => contact.number === number\n    );\n    if (name === \"\" && number === \"\") {\n      Notiflix.Notify.failure(`Enter contact information`);\n    } else if(name === \"\") {\n      Notiflix.Notify.failure(`Enter a valid contact name as in the example`);\n    } else if(number === \"\") {\n      Notiflix.Notify.failure(`Enter a valid phone number as in the example`);\n    } else if (isPresentOnList && isNumberOnList) {\n      Notiflix.Notify.failure(`${name} is already in your contacts.`);\n    } else {\n      Notiflix.Notify.success(`${name} ADDED to your contact list.`);\n      dispatch(addContact(newContact));\n      form.reset()\n    }\n  }\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container \n        component=\"main\"\n        maxWidth=\"xs\"\n        sx={{\n          padding: 2,\n          border: '1px solid #ccc',\n          borderRadius: '5px',\n          boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n          maxHeight: '500px',\n          overflow: 'auto',\n        }}\n      >\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <MenuBookIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Add contact\n          </Typography>\n          <Box component=\"form\" onSubmit={onFormSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Enter name\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Will Smith\"\n              autoFocus\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Enter number\"\n              name=\"number\"\n              type=\"number\"\n              placeholder=\"+48 089 123 942\"\n            />\n            <LoadingButton\n              endIcon={<SaveIcon />}\n              loading={isAddLoading}\n              loadingPosition=\"end\"\n              variant=\"contained\"\n              type=\"submit\"\n              fullWidth\n              sx={{ mt: 3, mb: 2 }}\n            >\n              <span>add</span>\n            </LoadingButton>\n          </Box>\n        </Box>\n     \n      </Container>\n    </ThemeProvider>\n  );\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice'\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch() \n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = (event) => {\n    const filterValue = event.target.value\n    dispatch(setFilter(filterValue));\n  };\n\n    return (\n        <>\n          <Typography component=\"h1\" variant=\"h5\"\n            sx={{\n                marginTop: 3,\n                textAlign: 'center',\n            }}\n          >\n            Your contacts\n          </Typography>\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Enter name\"\n              name=\"filter\"\n              type=\"text\"\n              placeholder=\"Jason Statham\"\n              autoComplete=\"name\"\n              value={filter.value}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              onChange={handleFilterChange}\n            />\n          </Box>\n        </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NoContactsYet_container__WCNZH\"};","import css from \"./NoContactsYet.module.css\";\n\nimport AutoStoriesSharpIcon from '@mui/icons-material/AutoStoriesSharp';\n\n\nexport const NoContactsYet = () => {\n    return (\n        <div className={css.container}>\n              <AutoStoriesSharpIcon\n              sx={{color: \"#1876D1\"}}\n              />\n              <p className={css.paragraph}>\n                You have no contacts... yet !\n              </p>\n        </div>\n    );\n};","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport { NoContactsYet } from \"components/NoContactsYet/NoContactsYet\";\n\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n\nimport swal from 'sweetalert';\n\nexport const Contact = ({ contacts }) => {\n\n    const dispatch = useDispatch();\n\n    function removeFromContactsListHandler({ currentTarget: target }) {\n        swal({\n          title: 'Are you sure?',\n          text: 'Once deleted, you will not be able to recover this contact!',\n          icon: 'warning',\n          buttons: true,\n          dangerMode: true,\n        }).then(willDelete => {\n            if (willDelete) {\n              target.setAttribute('disabled', 'true');\n              const id = target.getAttribute('data-id');\n              dispatch(deleteContact(id));\n              swal('Contact has been deleted!', {\n                icon: 'success',\n              });\n            }\n          });\n      }\n    \n    return (\n        <TableContainer\n            component={Paper}\n            style={{\n                width: '100%',\n                maxWidth: '450px',\n                margin: '0 auto',\n            }}\n        >\n            {contacts.length !== 0 ? (\n                <Table sx={{ minWidth: 400}} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell sx={{ fontWeight: \"bold\" }}>Name</TableCell>\n                            <TableCell sx={{ fontWeight: \"bold\" }}>Number</TableCell>\n                            <TableCell sx={{ fontWeight: \"bold\" }}>Delete</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {contacts.map(({ number, name, id }) => (\n                            <TableRow\n                                key={id}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                className=\"contacts-row\"\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {name}\n                                </TableCell>\n                                <TableCell align=\"left\">{number}</TableCell>\n                                <TableCell align=\"center\">\n                                    <IconButton\n                                        data-id={id}\n                                        aria-label=\"delete\"\n                                        onClick={removeFromContactsListHandler}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            ) : (\n                <NoContactsYet />\n            )}\n        </TableContainer>\n    );\n};","import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from \"../../redux/contacts/selectors\";\n\nimport { Filter } from \"../Filter/Filter\";\nimport { Contact } from \"../Contact/Contact\";\n\nimport Container from '@mui/material/Container';\n\n\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectVisibleContacts)\n\n    return (\n        <Container \n          component=\"main\"\n          maxWidth=\"xs\"\n          sx={{\n            padding: 2,\n            border: '1px solid #ccc',\n            borderRadius: '5px',\n            boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n            maxHeight: '500px',\n            overflow: 'auto',\n          }}\n        >\n          <Filter/>\n              <Contact contacts={contacts}/>\n        </Container>\n    );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Container from '@mui/material/Container';\n\n\nimport { fetchContacts } from \"../../redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"../../redux/contacts/selectors\";\n\n\nimport { ContactsForm } from '../../components/ContactsForm/ContactsForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\nexport default function Contacts() {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  \n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  return (\n    <Container \n      sx={{\n        display: 'flex',\n        flexDirection: {\n          xs: 'column',\n          md: 'row',\n        },\n        justifyContent: 'center',\n        gap: 1,\n        paddingBottom: \"50px\",\n      }}\n    >\n      <ContactsForm/>\n      <ContactList\n        isLoading={isLoading}\n        error={error}\n      />\n    </Container>\n  );\n};\n\n\n"],"names":["defaultTheme","createTheme","ContactsForm","dispatch","useDispatch","contacts","useSelector","selectContacts","isAddLoading","selectIsAddLoading","ThemeProvider","theme","Container","component","maxWidth","sx","padding","border","borderRadius","boxShadow","maxHeight","overflow","CssBaseline","Box","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","MenuBook","Typography","variant","onSubmit","event","preventDefault","form","target","name","elements","value","number","newContact","isPresentOnList","find","contact","toLowerCase","isNumberOnList","Notiflix","addContact","reset","noValidate","mt","TextField","margin","required","fullWidth","label","type","placeholder","autoFocus","pattern","title","LoadingButton","endIcon","Save","loading","loadingPosition","mb","Filter","filter","selectFilter","textAlign","autoComplete","onChange","filterValue","setFilter","NoContactsYet","className","css","AutoStoriesSharp","color","Contact","removeFromContactsListHandler","currentTarget","swal","text","icon","buttons","dangerMode","then","willDelete","setAttribute","id","getAttribute","deleteContact","TableContainer","Paper","style","width","length","Table","minWidth","TableHead","TableRow","TableCell","fontWeight","TableBody","map","scope","align","IconButton","onClick","Delete","ContactList","selectVisibleContacts","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","xs","md","justifyContent","gap","paddingBottom"],"sourceRoot":""}